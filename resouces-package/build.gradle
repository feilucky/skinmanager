plugins {
    id 'com.android.application'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.mxtech.resouces"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            res {
                srcDirs 'src/main/res', 'src/main/res/drawable-xxhdpi'
            }
        }
    }
}

dependencies {

//    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}


final def TARGET_SKIN_DIR = '../skin-package'
def skinName = "dark.skin"
gradle.projectsEvaluated {
    assembleRelease.doLast {
        println("----------------assembleRelease.doLast.begin---------------")
        def dir = new File(TARGET_SKIN_DIR)
        if(!dir.exists()) {
            dir.mkdirs()
        }

        def f = new File(TARGET_SKIN_DIR + skinName)
        if(f.exists()) {
            f.delete()
        }

        copy {
            from('build/outputs/apk')
            into(TARGET_SKIN_DIR)
            include '*.apk'
            exclude '**/*-unaligned.apk'
            rename ('resouces-package-release.apk',skinName)
        }
        println("----------------assembleRelease.doLast.success---------------")

    }

    assembleDebug.doLast {
        println("----------------assembleDebug.doLast.begin---------------")
        def dir = new File(TARGET_SKIN_DIR)
        if(!dir.exists()) {
            dir.mkdirs()
        }

        def f = new File(TARGET_SKIN_DIR + skinName)
        if(f.exists()) {
            f.delete()
        }

        copy {
            from('build/outputs/apk/debug')
            into(TARGET_SKIN_DIR)
            include '*.apk'
            exclude '**/*-unaligned.apk'
            rename ('resouces-package-debug.apk',skinName)
        }
        println("----------------assembleDebug.doLast.success---------------")
    }
}